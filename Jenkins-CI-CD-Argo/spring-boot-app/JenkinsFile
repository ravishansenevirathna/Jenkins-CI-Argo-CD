pipeline {
  agent {
    docker {
      image 'ravishandoc/spring-boot-app:latest'
      args '--privileged -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }
  stages {
    stage('Checkout') {
      steps {
        // Corrected the git step for actual code retrieval
        git branch: 'main', url: 'https://github.com/your-github-repo/Jenkins-CI-CD-Argo.git'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        sh 'cd Jenkins-CI-CD-Argo/spring-boot-app && mvn clean package' // Adjusted path as needed
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://3.108.61.171:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd Jenkins-CI-CD-Argo/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "ravishandoc/ultimate-cicd:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
          sh 'cd Jenkins-CI-CD-Argo/spring-boot-app && docker build -t ${DOCKER_IMAGE} .' // Build Docker image
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
              dockerImage.push() // Push Docker image to registry
          }
        }
      }
    }
    stage('Update Deployment File') {
      environment {
        GIT_REPO_NAME = "Jenkins-CI-Argo-CD"
        GIT_USER_NAME = "ravishansenevirathna"
      }
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config user.email "travishan55@gmail.com"
            git config user.name "Ravishan"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" Jenkins-CI-CD-Argo/spring-boot-app-manifests/deployment.yml
            git add Jenkins-CI-CD-Argo/spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }
}
